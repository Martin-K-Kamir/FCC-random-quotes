*,
*::before,
*::after {
	box-sizing : border-box;
}

* {
	margin  : 0;
	padding : 0;
}

/* Remove list styles on ul, ol elements with a list role, which suggests default styling will be removed */
ul[role='list'],
ol[role='list'] {
	list-style : none;
}

/* Set core root defaults */
html:focus-within {
	scroll-behavior : smooth;
}

:where(html, body, #root) {
	min-block-size : 100%;
}

/* Set core body defaults */
body {
	text-rendering         : optimizeSpeed;
	line-height            : 1.5;
	-webkit-font-smoothing : antialiased;
}


/* A elements that don't have a class get default styles */
a:not([class]) {
	text-decoration-skip-ink : auto;
}

/* Make images easier to work with */
img,
picture,
video,
canvas,
svg {
	max-inline-size : 100%;
	block-size      : auto;
	display         : block;
}

input, button, textarea, select {
	font : inherit;
}

/* Remove all animations, transitions and smooth scroll for people that prefer not to see them */
@media (prefers-reduced-motion : reduce) {
	html:focus-within {
		scroll-behavior : auto;
	}

	*,
	*::before,
	*::after {
		animation-duration        : 0.01ms !important;
		animation-iteration-count : 1 !important;
		transition-duration       : 0.01ms !important;
		scroll-behavior           : auto !important;
	}
}

:root {
	--fg         : #ffffff;
	--bg         : #333333;
	--ff-primary : 'system-ui', 'Roboto', sans-serif;
}

body {
	font-family : var(--ff-primary);
	font-size   : 1.125rem;
	font-weight : 400;

}

.container {
	--_fg            : var(--fg);
	--_bg            : var(--bg);

	display          : grid;
	place-items      : center;
	min-height       : 100vh;

	color            : var(--_fg);
	background-color : var(--_bg);
}

.quote {
	padding          : 2em clamp(2em, 5vw, 3em);
	inline-size      : min(100% - 3rem, 55ch);
	border-radius    : 0.5rem;
	background-color : #ffffff;
}



:where(.quote__text, .quote__author) {
	color       : var(--_bg);
	line-height : 1.15;
}

.quote__text {
	font-size   : 1.125rem;
	font-weight : 700;
}

@media (min-width: 30em) {
	.quote__text {
		font-size   : 1.25rem;
	}
}

.quote__author {
	font-size : 0.875rem;
}

@media (min-width: 30em) {
	.quote__author {
		font-size : 1rem;
	}
}

.quote__author::before {
	content   : 'â€”';
	position  : absolute;
	transform : translateX(calc(-100% - 0.5em));
}

.btn {
	--_fg            : var(--fg, #000000);
	--_bg            : var(--bg, #888888);

	cursor           : pointer;
	display          : inline-grid;
	padding          : 0.525em 0.825em;
	border-radius    : 0.5rem;
	background-color : var(--_bg);
	color            : var(--_fg);
	border           : 0;
	text-decoration  : none;
	font-size        : 1rem;
	font-weight      : 600;
	line-height      : 1;
}

.btn:has(svg) {
	place-items : center;
}

.stack {
	display : grid;
}

.stack > * {
	margin-block : 0;
}

.stack > * + * {
	margin-block-start : var(--space, 1em);
}

.text-center {
	text-align : center;
}

:where([class*='align'], [class*='direction'], [class*='justify']) {
	display : grid;
}

.direction-row {
	grid-auto-flow : column
}

.justify-items-between {
	justify-content : space-between;
}

.space-1 {
	--space : 1.125em;
}

.space-2 {
	--space : 1.5em;
}

.space-3 {
	--space : 2em;
}